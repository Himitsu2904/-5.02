#include <iostream>
using namespace std;

int main()
{
	setlocale(0, "ru"); //локализация кирилицы в коде
	//1.Ввести массив из 5 чисел, а затем вывести его в обратном порядке. 
	const int SIZE = 5; //оглашение константы размера массива
	int arr[SIZE]; //оглашение массива
	for (int i = 0; i < SIZE; i++) //цикл ввода элементов массива с условием и модернизацией
	{
		cin >> arr[i]; //ввод элементов массива
	}
	for (int i = SIZE - 1; i << SIZE >= 0; i--) //цикл вывода элементов массива с условием и модернизацией
	{
		cout << arr[i] << "\t"; //вывод элементов массива в обратном порядке
	}

	cout << "\n-------------------------------------------------\n";

	//2.Создать массив из 20 случайных чисел. Вывести все элементы массива с четными индексами.
	srand(time(0));
	//функция, благодаря которой каждый раз при активации программы рандомно будут генерироваться РАЗНЫЕ числа
	const int size = 20; //оглашение константы размера массива
	int ARR[size]; //оглашение массива
	for (int i = 0; i < size; i++) //цикл вывода элементов массива с четными индексами
	{
		ARR[i] = rand(); //генерация радномных значений элемента массива
		if (i % 2 == 0) //условие вывода элемента массива (индекс должен быть четным)
		{
			cout << ARR[i]<<"\t"; //вывод элемента массива
		}
	}

	cout << "\n-------------------------------------------------\n";

	/*3.Создать массив из 10 случайных чисел в диапазоне от -20 до 20.
	Определить среднее арифметическое положительных элементов массива.*/
	const int Size = 10; //оглашение константы размера массива
	int mass[Size], s = 0, k = 0;
	//оглашение массива, переменных суммы положительных элементов массива и их количество
	double sred_arif; //оглашение переменной среднего арифметического положительных элементов массива
	for (int i = 0; i < Size; i++) //цикл для отределения положительных элементов массива, их суммы и количества
	{
		mass[i] = rand() % 41 - 20; //генерация случайных чисел в диапазоне от -20 до 20
		if (mass[i] > 0) //условие положительного элемента массива
		{
			s += mass[i]; //добавление элемента массива к сумме
			k++; //увеличение количества положительных элементов на 1
		}
	}
	sred_arif = (double)s / k; //расчет среднего арифметического положительных элементов массива
	cout << "Среднее арифметическое положительных элементов массива = " << sred_arif;
	//вывод среднего арифметического

	cout << "\n-------------------------------------------------\n";

	/*4.Создать массив из 10 случайных чисел в диапазоне от - 5 до 5.
	Определить количество положительных, отрицательных и нулевых элементов массива.*/
	int numbers[Size], plus = 0, minus = 0, zero = 0;
	//оглашение массива, переменных количества положительных, отрицательных и нулевых элементов массива
	for (int i = 0; i < Size; i++) //цикл определения категории, к которой относится элемент массива
	{
		numbers[i] = rand() % 11 - 5; //генерация слуйчаного значения элемента массива в диапазоне от -5 до 5
		if (numbers[i] > 0) //условие положительного элемента масива
		{
			plus++; //увеличение количества положительных элементов массива на 1 при истинности условия
		}
		else if (numbers[i] < 0) //условие отрицательного элемента масива
		{
			minus++; //увеличение количества отрицательных элементов массива на 1 при истинности условия
		}
		else //нулевое значение элемента масива при неистинности 2 предыдущих условий
		{
			zero++; //увеличение количества нулевых элементов массива на 1 при неистинности остальных условий
		}
	}
	cout << "Количество положительных элементов массива = " << plus << ", отрицательных = " << minus << ", а нулевых = " << zero;
	//вывод количества положительных, отрицательных и нулевых элементов массива

	cout << "\n-------------------------------------------------\n";

	//5.Создать массив из 10 целых случайных чисел. Вычислить сумму четных элементов массива и среднее арифметическое нечетных.
	int Num[Size], sum_chetn = 0, sum_nechetn = 0, n = 0;
	//оглашение массива, переменных суммы (не)четных элементов массива и количества нечетных
	double sred_ar; //оглашение переменной среднего арифметического нечетных элементов массива
	for (int i = 0; i < Size; i++) //цикл расчета суммы (не)четных элементов массива и количества нечетных
	{
		Num[i] = rand(); //генерация случайных чисел 
		if (Num[i] % 2 == 0) //условие четного элемента массива
		{
			sum_chetn += Num[i]; //добавление значения элемента к сумме четных чисел при истинности условия
		}
		else //если значение элемента массива оказывается нечетным
		{
			sum_nechetn += Num[i]; // добавление значения элемента к сумме нечетных чисел при неистинности предыдущего условия
			n++; //увеличение количества нечетных элементов массива на 1
		}
	}
	sred_ar = (double)sum_nechetn / n; //расчет среднего арифметического нечетных элементов массива
	cout << "Сумма четных элементов массива = " << sum_chetn << ", а среднее арифметическое нечетных = " << sred_ar;
	//вывод среднего арифметического нечетных элементов массива

	cout << "\n-------------------------------------------------\n";

	//6.Создать символьный массив (char - массив) из 10 элементов. Определить сколько в нём цифр, букв и знаков пунктуации.
	char symbols[Size]; //оглашение массива из 10 символов
	int digits = 0, letters = 0, punct = 0; //оглашение переменных количества цифр, букв и знаков пунктуации в массиве
	for (int i = 0; i < Size; i++) //цикл ввода и распределения введеных символов по категориям
	{
		cin >> symbols[i]; //ввод символа
		if (isdigit(symbols[i])) //является ли символ цифрой
		{
			digits++; //увеличение количества цифр в массиве на 1 при истинности условия
		}
		else if (isalpha(symbols[i])) //является ли символ буквой
		{
			letters++; //увеличение количества букв в массиве на 1 при истинности условия
		}
		else if (ispunct(symbols[i])) //является ли символ знаком пунктуации
		{
			punct++; //увеличение количества знаков пунктуации в массиве на 1 при истинности условия
		}
	}
	cout << "Количество цифр в массиве: " << digits << "\nбукв: " << letters << "\nзнаков пунктуации: " << punct;
	//вывод количества цифр, букв и знаков пунктуации в массиве

	cout << "\n-------------------------------------------------\n";

	/*7.Написать программу, которая предлагает пользователю ввести число и, затем подсчитывает, сколько раз это число
	встречается в массиве.*/
	int MASS[Size], chislo, kol = 0; //оглашение массива, переменных вводимого числа и его количества в массиве
	cout << "Введите однозначное положительное число: ";
	cin >> chislo; //ввод числа
	while (chislo < 0 || chislo > 9) //цикл вывода сообщения о некорректности введеного числа
	{
		cout << "Некорректное число. Введите еще раз. ";
		cin >> chislo; //повторный ввод числа при некорректности
	}
	for (int i = 0; i < Size; i++) //цикл проверки повторяемости введеного числа в массиве
	{
		MASS[i] = rand() % 11;
	 //генерация случайного числа в диапазоне от 0 до 10, чтоб повторяемость вообще имела шансы быть
		if (chislo == MASS[i]) //условие повторяемости введеного числа в массиве
		{
			kol++; //увеличение количества того, сколько раз это число встречается в массиве
		}
	}
	cout << "В массиве число " << chislo << " встречается " << kol << " раз.";
	//вывод количества появления этого числа в массиве

	cout << "\n-------------------------------------------------\n";

	/*8.Создать массив из 10 целых случайных чисел в диапазоне от 0 до 100.
	Определить количество элементов массива, кратных 3, 5, 7.*/
	int random[Size], n3 = 0, n5 = 0, n7 = 0; //оглашение массива и переменных количества элементов массива, кратныз 3, 5 и 7
	for (int i = 0; i < Size; i++) //цикл генерации и определения элементов по категориям кратности
	{
		random[i] = rand() % 101; //генерация случайных чисел в диапазоне от 0 до 100
		if (random[i] % 3 == 0) //условие кратности элемента массива 3
		{
			n3++; //увеличение количества элементов массива, кратных 3, на 1 при истинности условия
		}
		else if (random[i] % 5 == 0) //условие кратности элемента массива 5
		{
			n5++; //увеличение количества элементов массива, кратных 5, на 1 при истинности условия
		}
		else if (random[i] % 7 == 0) //условие кратности элемента массива 7
		{
			n7++; //увеличение количества элементов массива, кратных 3, на 1 при истинности условия
		}
	}
	cout << "Количество элементов массива, кратных 3 = " << n3 << ", кратных 5 = " << n5 << ", а кратных 7 = " << n7;
	//вывод количества элементов массива, кратных 3, 5 и 7

	cout << "\n-------------------------------------------------\n";

	/*9.Создать массив из 10 целых случайных чисел в диапазоне от 0 до 100.
	Определить сумму элементов массива, кратных 3, но не кратных 5.*/
	int krat[Size], sum = 0; //оглашение массива и переменной суммы его элементов, кратных 3, но не кратных 5
	for (int i = 0; i < Size; i++) //цикл генерации и селекции элементов для суммы
	{
		krat[i] = rand() % 101; //генерация случайного значения элемента
		if (krat[i] % 3 == 0 && krat[i] % 5 != 0) //условие элемента массива, кратного 3, но не кратного 5
		{
			sum += krat[i]; //добавление к сумме чисел элемента массива, соответствующего условиям выше
		}
	}
	cout << "Сумма элементов массива, кратных 3, но не кратных 5 = " << sum;
	//вывод суммы элементов массива, кратных 3, но не кратных 5

	cout << "\n-------------------------------------------------\n";

	/*11.Создать массив из 20 случайных чисел в диапазоне от - 30 до 10. Написать программу, определяющую
	сумму элементов массива, находящихся в массиве до первого положительного элемента.*/
	int num[size], S = 0; //оглашение массива и переменной суммы его элементов до первого положительного
	for (int i = 0; i < size; i++) //цикл генерации и проверки элемента
	{
		num[i] = rand() % 41 - 30; //генерация случайного значения в диапазоне от -30 до 10
		if (num[i] > 0) //условие полодительности элемента массива
		{
			break; //прерывание цикла в случае истинности условия
		}
		S += num[i]; //добавление значения элемента массива к сумме при неистинности условия выше
	}
	cout << "Сумма элементов массива, находящихся до первого положительного элемента = " << S << "\n";
	//вывод суммы элементов массива, находящихся до первого положительного элемента
}